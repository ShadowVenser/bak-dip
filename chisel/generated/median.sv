// Generated by CIRCT firtool-1.62.1
module median(
  input  [7:0] arr_0_0,
               arr_0_1,
               arr_0_2,
               arr_1_0,
               arr_1_1,
               arr_1_2,
               arr_2_0,
               arr_2_1,
               arr_2_2,
  output [7:0] med
);

  wire       sels_0 = arr_0_0 > arr_0_1;
  wire [7:0] subs_0 = sels_0 ? arr_0_0 : arr_0_1;
  wire [7:0] subs_1 = sels_0 ? arr_0_1 : arr_0_0;
  wire       sels_1 = subs_1 > arr_0_2;
  wire [7:0] subs_2 = sels_1 ? subs_1 : arr_0_2;
  wire [7:0] f_low_0 = sels_1 ? arr_0_2 : subs_1;
  wire       sels_2 = subs_0 > subs_2;
  wire [7:0] f_high_0 = sels_2 ? subs_0 : subs_2;
  wire [7:0] f_med_0 = sels_2 ? subs_2 : subs_0;
  wire       sels_1_0 = arr_1_0 > arr_1_1;
  wire [7:0] subs_1_0 = sels_1_0 ? arr_1_0 : arr_1_1;
  wire [7:0] subs_1_1 = sels_1_0 ? arr_1_1 : arr_1_0;
  wire       sels_1_1 = subs_1_1 > arr_1_2;
  wire [7:0] subs_1_2 = sels_1_1 ? subs_1_1 : arr_1_2;
  wire [7:0] f_low_1 = sels_1_1 ? arr_1_2 : subs_1_1;
  wire       sels_1_2 = subs_1_0 > subs_1_2;
  wire [7:0] f_high_1 = sels_1_2 ? subs_1_0 : subs_1_2;
  wire [7:0] f_med_1 = sels_1_2 ? subs_1_2 : subs_1_0;
  wire       sels_2_0 = arr_2_0 > arr_2_1;
  wire [7:0] subs_2_0 = sels_2_0 ? arr_2_0 : arr_2_1;
  wire [7:0] subs_2_1 = sels_2_0 ? arr_2_1 : arr_2_0;
  wire       sels_2_1 = subs_2_1 > arr_2_2;
  wire [7:0] subs_2_2 = sels_2_1 ? subs_2_1 : arr_2_2;
  wire [7:0] f_low_2 = sels_2_1 ? arr_2_2 : subs_2_1;
  wire       sels_2_2 = subs_2_0 > subs_2_2;
  wire [7:0] f_high_2 = sels_2_2 ? subs_2_0 : subs_2_2;
  wire [7:0] f_med_2 = sels_2_2 ? subs_2_2 : subs_2_0;
  wire [7:0] subs_3_1 = f_high_0 > f_high_1 ? f_high_1 : f_high_0;
  wire [7:0] s_high = subs_3_1 > f_high_2 ? f_high_2 : subs_3_1;
  wire       sels_4_0 = f_med_0 > f_med_1;
  wire [7:0] subs_4_0 = sels_4_0 ? f_med_0 : f_med_1;
  wire [7:0] subs_4_1 = sels_4_0 ? f_med_1 : f_med_0;
  wire [7:0] subs_4_2 = subs_4_1 > f_med_2 ? subs_4_1 : f_med_2;
  wire [7:0] s_med = subs_4_0 > subs_4_2 ? subs_4_2 : subs_4_0;
  wire [7:0] subs_5_1 = f_low_0 < f_low_1 ? f_low_1 : f_low_0;
  wire [7:0] s_low = subs_5_1 > f_low_2 ? subs_5_1 : f_low_2;
  wire       sels_6_0 = s_high > s_med;
  wire [7:0] subs_6_0 = sels_6_0 ? s_high : s_med;
  wire [7:0] subs_6_1 = sels_6_0 ? s_med : s_high;
  wire [7:0] subs_6_2 = subs_6_1 > s_low ? subs_6_1 : s_low;
  assign med = subs_6_0 > subs_6_2 ? subs_6_2 : subs_6_0;
endmodule


